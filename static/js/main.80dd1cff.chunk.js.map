{"version":3,"sources":["components/home.js","App.js","serviceWorker.js","index.js"],"names":["Covid","Fragment","Navbar","bg","variant","Brand","href","Nav","className","Link","Jumbotron","id","Image","src","Button","Row","Col","type","name","placeholder","required","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.80dd1cff.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport { Jumbotron } from 'react-bootstrap';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {  Row, Col } from 'react-bootstrap';\r\nimport { Navbar, Nav,Link,Brand} from 'react-bootstrap';\r\nimport './app.css';\r\n\r\nclass Covid extends Component {\r\n  render() {\r\n    return(\r\n    <React.Fragment>\r\n         <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\r\n            <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"/\">Covid</Nav.Link>\r\n            <Nav.Link href=\"./latestnews.js\">Meta</Nav.Link>\r\n            </Nav>\r\n        </Navbar>\r\n        \r\n      \r\n      <Jumbotron>\r\n           <div className=\"container\">\r\n               <div className=\"row row-header\">\r\n                   <p id=\"p1\">Notice : rate limiting is being phased in if you are being rate limited\r\n                   please subscribe below</p><br></br>\r\n                   <div className=\"col-11\">\r\n                      <Image src=\"https://covid19api.com/assets/images/image06.png?v81764001474951/\"/>\r\n                      <p id=\"p2\">A Free API on the Coronavirus</p>\r\n                      <p className=\"cp3\">Access data on COVID19 through an easy API for free. Build dashboards, mobile apps or integrate in to other applications.\r\n                          Data is sourced from <a href=\"#\">Johns Hopkins CSSEJ</a></p>\r\n                      <p className=\"cp3\">Built by <a href=\"#\">Kyle Redelinghuys</a></p>\r\n                      <p className=\"cp3\">Support the project, subscribe today!</p>\r\n                      <Button>Subscribe</Button>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </Jumbotron>\r\n       <div className=\"container cont1\">\r\n           <p id=\"p3\">169,963,344</p>\r\n           <p id=\"p4\">requests served by the API</p>\r\n           <p></p>\r\n           <p></p>\r\n       </div>\r\n       <div className=\"container cont2\">\r\n           <p>This project is supported by</p>\r\n        </div>\r\n        <div className=\"image1\">\r\n            <a href=\"#\">\r\n            <Image src=\"https://covid19api.com/assets/images/image07.svg?v81764001474951\"/>\r\n            </a>\r\n        </div>\r\n        <div className=\"container cont4\">\r\n           <Row>\r\n              <Col><h2 className=\"ch2\">Latest Data</h2>\r\n              <p className=\"cp\">Data that is updated multiple times a day</p></Col>\r\n              <Col><h2 className=\"ch2\">JSON</h2>\r\n              <p className=\"cp\">Responses are in JSON making for easy integration</p></Col>\r\n            </Row>\r\n            <Row>\r\n              <Col><h2 className=\"ch2\">Free</h2>\r\n              <p className=\"cp\">Use the API for free, use it for whatever you want</p></Col>\r\n              <Col><h2 className=\"ch2\">Build</h2>\r\n              <p className=\"cp\">Build products to help get data where it needs to go</p></Col>\r\n            </Row>\r\n            \r\n        </div>\r\n        <Jumbotron className=\"foot1\"> \r\n        <div className=\"container \">\r\n        \r\n                <h2 id=\"hf1\">Get Your Subscription</h2>{}\r\n                <p className=\"pf1\">The basic API is free to use and rate limited.<b> Upgrade to a subscription</b> today to get \r\n                    extra data and no rate limit!</p>\r\n                <p>Premium data includes a second data source: total cases, new cases, total deaths, new deaths, total cases per million, new cases per million, total deaths per million, new deaths per million, population, population density, median age, aged 65 and older, aged 70 and older, GDP per capita, covid death rate, diabetes prevalence, \r\n                hand washing facilities, hospital beds per thousand and life expectancy.</p>\r\n                <p className=\"pf1\">Travel advice, other statistics for countries and premium-only routes are also be available.</p>\r\n                <p className=\"pf1\"><b> The tiers are as follows:</b></p>\r\n                <ul>\r\n                    <li>$10 per month. No rate limit, extended date on /summary route</li>\r\n                    <li>$30 per month. Everything above with separate routes for country-level covid-related data</li>\r\n                    <li>$100 per month. Everything above, extended data on a country level for other data including travel restrictions.\r\n                        This also comes with a support package.</li>\r\n                </ul>\r\n                <h2>Choose your subscription below:</h2>\r\n                <Row>\r\n                    <Col><Button>Basic $10 per month</Button></Col>\r\n                    <Col><Button>Extended $30 per month</Button></Col>\r\n                    <Col><Button>Premium $1000 per month</Button></Col>\r\n                </Row>\r\n                <p >Once you have subscribed we will reach out to you directly with next steps.</p>\r\n                <p >Premium data sourced from various websites, Our World In Data and OxCGRT Policy Tracker (Thomas Hale, Sam Webster, Anna Petherick, Toby Phillips, and Beatriz Kira. (2020). \r\n                    Oxford COVID-19 Government Response Tracker. Blavatnik School of Government.).</p>\r\n       \r\n        </div>\r\n        </Jumbotron>\r\n        <Jumbotron className=\"foote1\">\r\n            <h3>Join Us On Slack</h3>\r\n            <Button>Join slack</Button>\r\n            <h3>Documentation On Postman</h3>\r\n            <Button>View Documentation</Button>\r\n        </Jumbotron>\r\n        <Jumbotron className=\"foot2\"> \r\n        <div className=\"container  contf1\" >\r\n            <div className=\"forms \">\r\n                <h3 id=\"hf1\">Get In Touch</h3>\r\n                <p>We are always open to working with new partners. Our main focus is on three areas: data sources, media coverage, funding. If you can help with these (or anything else) please fill in the form below!</p>\r\n                <form className=\"form1\">\r\n                    <input type=\"text\" name=\"name\" placeholder=\"Name\" required></input><br></br>\r\n                    <input type=\"text\" name=\"email\" placeholder=\"Email\" required></input><br></br>\r\n                    <textarea name=\"message\"placeholder=\"Message\"required></textarea><br></br>\r\n                    <Button>Submit</Button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        </Jumbotron>\r\n       \r\n       \r\n        <div className=\"col-12 col-sm-4 align-self-center icons\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                \r\n                <p className=\"copy\"> Copyright@2020--All rights reserved</p>\r\n        \r\n            </div>\r\n            \r\n    </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Covid;","import React ,{Component}from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Covid from './components/home';\nimport './App.css';\n\nclass App extends Component{\n  render(){\n    return(\n      /*<BrowserRouter>\n      <div className=\"App\">\n      \n        <Route\n                    path=\"/\"\n                    component={Covid}\n                    exact \n                    \n                />\n                <Route\n                    path=\"/dashboard\"\n                    component={Meta} \n                />\n      </div>\n      </BrowserRouter>*/\n      <div className=\"App\">\n        <Covid/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}